!function(){"use strict";angular.module("ml.ol-maps",[])}(),function(){"use strict";function e(){return{restrict:"E",scope:{features:"=",baseMap:"=",zoom:"=",geometry:"=",parentSingleClick:"&singleClick"},templateUrl:"/templates/detail-map.html",controller:"MLOlDetailMapController",controllerAs:"ctrl"}}function t(e,t){var o=this;o.pointMap={},o.geometries=[],e.$watch("features",function(t){o.addMapNodes(e.features)}),e.$watch("baseMap",function(t){e.baseMap&&(o.mapSettings.baseMap=e.baseMap)}),e.$on("openlayers.map.singleclick",function(t,o){o.event.map.forEachFeatureAtPixel(o.event.pixel,function(t,o){var a=t.get("uri");e.$apply(function(){e.parentSingleClick&&e.parentSingleClick({featureUri:a})})})}),o.addLinkedNodes=function(e){var t=[],a=0;for(a=0;a<e.nodes.length;a++)e.nodes[a].location&&e.nodes[a].location.latitude&&(t.push({type:"Feature",id:e.nodes[a].id,properties:{name:e.nodes[a].label,id:e.nodes[a].id,uri:e.nodes[a].id},geometry:{type:"Point",coordinates:[e.nodes[a].location.longitude,e.nodes[a].location.latitude]}}),o.pointMap[e.nodes[a].id]=e.nodes[a].location);o.mapSettings.ptLayer.source.geojson.object.features=o.mapSettings.ptLayer.source.geojson.object.features.concat(t)},o.addLinks=function(e){var t=[],a=0,r=null,n=null;for(a=0;a<e.edges.length;a++)n=null,r=null,e.edges[a].from&&e.edges[a].to&&(n=o.pointMap[e.edges[a].from],r=o.pointMap[e.edges[a].to],n&&r&&t.push({type:"Feature",id:e.edges[a].id,properties:{name:e.edges[a].label},geometry:{type:"LineString",coordinates:[[n.longitude,n.latitude],[r.longitude,r.latitude]]}}));o.mapSettings.lineLayer.source.geojson.object.features=o.mapSettings.lineLayer.source.geojson.object.features.concat(t)},o.centerMap=function(){if(o.mapSettings.ptLayer.source.geojson.object.features.length>0){var e=o.mapSettings.ptLayer.source.geojson.object.features[0];o.mapSettings.center.lon=e.geometry.coordinates[0],o.mapSettings.center.lat=e.geometry.coordinates[1]}},o.addMapNodes=function(e){var t=[],a=0;if(e&&Array.isArray(e))for(a=0;a<e.length;a++)e[a].geometry&&t.push({type:"Feature",id:e[a].id?e[a].id:"feature"+a,properties:{name:e[a].name,id:e[a].id?e[a].id:"feature"+a,uri:e[a].uri},geometry:e[a].geometry});o.mapSettings.ptLayer.source.geojson.object.features=t.concat(o.geometries),o.centerMap()},o.addGeometries=function(e){var t=[],a=0;if(Array.isArray(e)&&e.length>0)if(Array.isArray(e[0]))for(a=0;a<e.length;a++)Array.isArray(e[a])?t.push({type:"Feature",id:"geo"+a,properties:{id:"geo"+a},geometry:{type:"Point",coordinates:e[a]}}):console.log("Unrecognized geometry format: ",e,"  Expected format is [lng, lat] or [[lng, lat], [lng, lat]]");else 2!==e.length||isNaN(e[0])||isNaN(e[1])?console.log("Unrecognized geometry format: ",e,"  Expected format is [lng, lat] or [[lng, lat], [lng, lat]]"):t.push({type:"Feature",id:"geo1",properties:{id:"geo1"},geometry:{type:"Point",coordinates:e}});else console.log("Unrecognized geometry format: ",e,"  Expected format is [lng, lat] or [[lng, lat], [lng, lat]]");o.geometries=t,o.mapSettings.ptLayer.source.geojson.object.features=o.mapSettings.ptLayer.source.geojson.object.features.concat(o.geometries),o.centerMap()};var a={name:"lineLayer",style:{fill:{color:"rgba(255, 0, 255, 0.6)"},stroke:{color:"blue",width:3},label:"${name}"},source:{type:"GeoJSON",geojson:{projection:"EPSG:4326",object:{type:"FeatureCollection",features:[]}}}},r=t.buildMapSettings();r.ptLayer.style=t.createPointStyle,r.lineLayer=e.lineLayer?e.lineLayer:a,r.center.zoom=e.zoom?e.zoom:4,e.baseMap&&(r.baseMap=e.baseMap),e.pointLayer&&(r.ptLayer=e.pointLayer),o.mapSettings=r,o.addMapNodes(e.features),e.geometry&&o.addGeometries(e.geometry)}angular.module("ml.ol-maps").directive("mlOlDetailMap",e).controller("MLOlDetailMapController",t),t.$inject=["$scope","mlOlHelper"]}(),function(){"use strict";function e(){var e=["#f70010","#e8790b","#2433d8","#bb0be8","#17e804"],t=function(e){return new ol.style.Text({textAlign:"center",textBaseline:"top",font:"12px Arial",text:e,fill:new ol.style.Fill({color:"red"}),stroke:new ol.style.Stroke({color:"white",width:3}),offsetX:0,offsetY:4,rotation:0})},o=function(e){return new ol.style.Text({textAlign:"center",textBaseline:"middle",font:"14px Arial",text:e,fill:new ol.style.Fill({color:"black"}),offsetX:0,offsetY:0,rotation:0})},a=function(e,o){var a=6;return new ol.style.Style({image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:"red"}),stroke:new ol.style.Stroke({color:"black",width:1})}),text:t(e.get("name"))})},r=function(a,r){var n=10,l=0,i=0,s=2,c=[5],p=0;return a.get("count")&&(l=a.get("count"),i=l.toString().length,n=10+(i>1?5*(i-1):0)),a.get("layer")&&(p=a.get("layer")%5),1===l&&(n=5,s=1,c=[]),new ol.style.Style({image:new ol.style.Circle({radius:n,fill:new ol.style.Fill({color:e[p]}),stroke:new ol.style.Stroke({color:"black",width:s,lineDash:c})}),text:l>1?o(""+l):t("")})},n=function(e){var t={},o=e.event.map.getSize(),a=e.event.map.getView().calculateExtent(o);for(a=ol.proj.transformExtent(a,"EPSG:3857","EPSG:4326"),t.west=a[0],t.south=a[1],t.east=a[2],t.north=a[3];t.west<-180;)t.west=t.west+360;for(;t.east>180;)t.east=t.east-360;return t},l=function(){var e={center:{lat:0,lon:0,zoom:5},defaults:{interactions:{mouseWheelZoom:!0},controls:{zoom:!0,rotate:!1,attribution:!1},events:{map:["singleclick","moveend"]}},baseMap:{name:"OpenStreetMap",source:{type:"OSM"}},mousePosition:{projection:"EPSG:4326",coordinateFormat:ol.coordinate.createStringXY(4)},ptLayer:{name:"ptLayer",source:{type:"GeoJSON",geojson:{projection:"EPSG:4326",object:{type:"FeatureCollection",features:[]}}}}};return e};return{createTextStyle:t,createPointStyle:a,createClusterPointStyle:r,createClusterTextStyle:o,convertExtent:n,buildMapSettings:l}}angular.module("ml.ol-maps").factory("mlOlHelper",e),e.$inject=[]}(),function(){"use strict";function e(){return{restrict:"E",scope:{baseMap:"=",zoom:"=",facets:"=",parentSingleClick:"&singleClick",parentBoundsChanged:"&boundsChanged"},templateUrl:"/templates/search-map.html",controller:"MLOlSearchFacetsMapController",controllerAs:"ctrl"}}function t(e,t){var o=this;o.pointMap={},o.mapSettings={},e.$watch("facets",function(t){o.processFacets(e.facets)}),e.$watch("baseMap",function(t){e.baseMap&&(o.mapSettings.baseMap=e.baseMap)}),e.$on("openlayers.map.singleclick",function(t,o){o.event.map.forEachFeatureAtPixel(o.event.pixel,function(t,o){var a=t.get("uri");e.$apply(function(){e.parentSingleClick&&e.parentSingleClick({featureUri:a})})})}),e.$on("openlayers.map.moveend",function(o,a){var r=t.convertExtent(a);e.$apply(function(){e.parentBoundsChanged&&e.parentBoundsChanged({bounds:r})})}),o.createMapNode=function(e,t,o){var a=(e.w+e.e)/2,r=(e.s+e.n)/2;return{type:"Feature",id:"feature"+t+o,properties:{name:""+e.count,id:"feature"+t+o,uri:e.uri,count:e.count,layer:o},geometry:{type:"Point",coordinates:[a,r]}}},o.processFacets=function(e){var t,a,r,n=[],l=0,i=0;if(o.createMapNode){for(t in e)if(a=e[t],a&&a.boxes){for(i=0;i<a.boxes.length;i++)r=a.boxes[i],n.push(o.createMapNode(r,i,l));++l}o.mapSettings.ptLayer.source.geojson.object.features=n}};var a=t.buildMapSettings();a.ptLayer.style=t.createClusterPointStyle,e.zoom&&(a.center.zoom=e.zoom),e.baseMap&&(a.baseMap=e.baseMap),e.pointLayer&&(a.ptLayer=e.pointLayer),o.mapSettings=a,o.processFacets(e.facets)}angular.module("ml.ol-maps").directive("mlOlSearchFacetsMap",e).controller("MLOlSearchFacetsMapController",t),t.$inject=["$scope","mlOlHelper"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{features:"=",baseMap:"=",zoom:"=",parentSingleClick:"&singleClick",parentBoundsChanged:"&boundsChanged"},templateUrl:"/templates/search-map.html",controller:"MLOlSearchFeatureMapController",controllerAs:"ctrl"}}function t(e,t){var o=this;o.geometries=[],o.mapSettings={},o.pointMap={},e.$watch("features",function(t){o.addMapNodes(e.features)}),e.$watch("baseMap",function(t){e.baseMap&&(o.mapSettings.baseMap=e.baseMap)}),e.$on("openlayers.map.singleclick",function(t,o){o.event.map.forEachFeatureAtPixel(o.event.pixel,function(t,o){var a=t.get("uri");e.$apply(function(){e.parentSingleClick&&e.parentSingleClick({featureUri:a})})})}),e.$on("openlayers.map.moveend",function(o,a){var r=t.convertExtent(a);e.$apply(function(){e.parentBoundsChanged&&e.parentBoundsChanged({bounds:r})})}),o.addMapNodes=function(e){var t=[],a=0;if(e&&Array.isArray(e))for(a=0;a<e.length;a++)e[a].geometry&&t.push({type:"Feature",id:e[a].id?e[a].id:"feature"+a,properties:{name:e[a].name,id:e[a].id?e[a].id:"feature"+a,uri:e[a].uri},geometry:e[a].geometry});o.mapSettings.ptLayer.source.geojson.object.features=t.concat(o.geometries)};var a=t.buildMapSettings();a.ptLayer.style=t.createPointStyle,e.zoom&&(a.center.zoom=e.zoom),e.baseMap&&(a.baseMap=e.baseMap),e.pointLayer&&(a.ptLayer=e.pointLayer),o.mapSettings=a,o.addMapNodes(e.features)}angular.module("ml.ol-maps").directive("mlOlSearchFeatureMap",e).controller("MLOlSearchFeatureMapController",t),t.$inject=["$scope","mlOlHelper"]}();